-content_for :javascripts do
  =javascript_include_tag 'markdown_and_friends', 'taxt_editor'
  =javascript_include_tag 'logged_in_only/history_item_form'

=render "shared/default_reference"

-content_for :breadcrumbs_right do
  =link_to "Show/hide taxt textarea", "#", data: { show_hide_toggler_for: "taxt_textarea" }, class: "btn-nodanger"

=form_with model: history_item, scope: :history_item, url: url do |f|
  =render "shared/errors_for", resource: history_item
  =hidden_field_tag :redirect_back_url, params[:redirect_back_url]

  .row{data: { show_hide_toggable_id: "taxt_textarea" }, class: ('show-hide-toggable-starts-open' unless collapse_history_item_taxt_textarea?(history_item))}
    .medium-12.columns
      =text_area_tag :taxt, history_item.taxt, rows: 5, name: 'history_item[taxt]', data: { has_linkables: true, previewable: true, previewable_title: "Taxt (freeform text) #{tooltip_icon('Required for taxt items; must it be blank for almost all other types of items. This textarea is always visible in order to make it easier to convert taxt item to relational items (or the other way around).')}", use_extras: true }

  .row.margin-top
    .large-12.columns
      .callout
        %h6
          Fields for relational history items
          =beta_label
          =tooltip_icon 'Still in beta. This section can be ignored for taxt items.'
        .row
          .medium-5.columns.end
            %table.unstriped
              %tr
                %td
                  =f.label :type do
                    Item type
                %td=f.select :type, options_for_history_item_types(history_item.type)

        .row
          .medium-12.columns
            %table.unstriped
              %tr
                %td.type-specific-section.type-specific-help-Taxt
                  %p
                    Fields in this box are not relevant for
                    %code Taxt
                    items.

                %td.type-specific-section.type-specific-help-JuniorSynonymOf.type-specific-help-SeniorSynonymOf
                  %p
                    Protonym-based. Currently only for species-group names, because the terminal taxon of the
                    %code object_protonym
                    is used for the link (for which cannot pick the correct rank for protonyms with both genera and subgenera).
                  %p
                    Like with
                    %code Taxt
                    items, mirrored items
                    =surround "(", ")" do
                      %code JuniorSynonymOf
                      +
                      %code SeniorSynonymOf
                    must be added.

                %td.type-specific-section.type-specific-help-FormDescriptions
                  %p
                    See also related wiki page
                    =link_to_wiki_page_or_missing WikiPage::FORMS

                %td.type-specific-section.type-specific-help-HomonymReplacedBy.type-specific-help-ReplacementNameFor
                  %p
                    Like with
                    %code Taxt
                    items, mirrored items
                    =surround "(", ")" do
                      %code HomonymReplacedBy
                      +
                      %code ReplacementNameFor
                    must be added.
                  %p.type-specific-section.type-specific-help-ReplacementNameFor
                    For
                    %code ReplacementNameFor
                    items, the taxt textarea is allowed to contain "trailiers"
                    like "[Junior secondary homonym of ...]"

              -History::Definition.all.each do |definition|
                -if definition.optional_attributes.present?
                  %tr
                    %td.type-specific-section{class: "type-specific-help-#{definition.type_name}"}
                      %p.small-text
                        Optional attributes:
                        -definition.optional_attributes.each do |optional_attribute|
                          %code=optional_attribute

        -# [grep:history_type].
        %table.table.unstriped
          %tbody
            %tr#type-specific-subtype.type-specific-section
              %th
                =f.label :subtype, id: 'type-label-subtype' do
                  subtype [???]
              %td.grow
                .small-max-width=f.select :subtype, [history_item.subtype, '???']
              %td
                %code subtype

            %tr#type-specific-picked-value.type-specific-section
              %th
                =f.label :picked_value, id: 'type-label-picked-value' do
                  picked_value [???]
              %td.grow=f.select :picked_value, [history_item.picked_value, '???']
              %td
                %code picked_value

            %tr#type-specific-text-value.type-specific-section
              %th.no-wrap
                =f.label :text_value, id: 'type-label-text-value' do
                  text_value [???]
              %td.grow
                .small-max-width=f.text_field :text_value
              %td
                %code text_value

            %tr#type-specific-object-protonym.type-specific-section
              %th.no-wrap
                =f.label :object_protonym, id: 'type-label-object-protonym' do
                  object_protonym_id [???]
              %td.grow=protonym_picker f.object.object_protonym, name: 'history_item[object_protonym_id]', id: 'history_item_object_protonym_id'
              %td
                %code object_protonym

            %tr#type-specific-object-taxon.type-specific-section
              %th.no-wrap
                =f.label :object_taxon, id: 'type-label-object-taxon' do
                  object_taxon_id [???]
              %td.grow=taxon_picker f.object.object_taxon, name: 'history_item[object_taxon_id]', id: 'history_item_object_taxon_id'
              %td
                %code object_taxon

            %tr#type-specific-reference.type-specific-section
              %th.no-wrap
                =f.label :reference, id: 'type-label-reference' do
                  Reference
              %td.grow=reference_picker f.object.reference, name: 'history_item[reference_id]', id: 'history_item_reference_id'
              %td
                %code reference_id

            %tr#type-specific-pages.type-specific-section
              %th.no-wrap
                =f.label :pages, id: 'type-label-pages' do
                  Pages
              %td.grow
                .small-max-width=f.text_field :pages
              %td
                %code pages

            %tr#type-specific-force-author-citation.type-specific-section
              %th.no-wrap
                =f.label :pages, id: 'type-label-force-author-citation' do
                  Force author citation
              %td.grow
                .small-max-width=f.check_box :force_author_citation
              %td
                %code force_author_citation

  .row.margin-top
    .medium-3.columns
      =edit_summary_text_field_tag
    .medium-6.columns
      =f.button 'Save', class: "btn-saves"
    .medium-3.columns.end
      =f.label :position do
        Position
        =tooltip_icon 'Leave blank to add new items last. Only relevant for items of Taxt type'
      =f.number_field :position, placeholder: ('Leave blank for default' if history_item.new_record?)
      =f.select :rank, Rank::AntCatSpecific::TYPE_SPECIFIC_HISTORY_ITEM_TYPES, include_blank: 'Show for all ranks (default)'

%h5.huge-margin-top.small-margin-bottom Related records

-# TODO: DRY w.r.t. 'history_items/show.haml'.
-if protonym.taxa.present?
  .row.margin-bottom
    .small-12.columns
      %h6.bold Taxa belonging to this history item's protonym
      %table
        -TaxonQuery.new(protonym.taxa.order_by_name).with_common_includes_and_current_taxon_includes.each do |taxon|
          %tr
            %td=CatalogFormatter.link_to_taxon(taxon)
            %td=taxon.rank.capitalize
            %td
              =taxon.status.capitalize
              -unless taxon.status.in?(Taxa::ExpandedStatus::SELF_STATUSES)
                %br
                %small=taxon.decorate.expanded_status

%h6.bold.small-margin-bottom Other history items belonging to #{protonym.name.name_html}
%table
  %tbody
    -if protonym.history_items.persisted.empty?
      %tr
        %td{colspan: 2} Protonym has no history items.
    -else
      -protonym.history_items.persisted.each do |protonym_history_item|
        %tr{class: ('pale-background' if protonym_history_item == history_item)}
          %td
            =link_to "##{protonym_history_item.id}", history_item_path(protonym_history_item)
            -if protonym_history_item == history_item
              %strong (selected)
          %td.grow
            %small=Detax[protonym_history_item.to_taxt]
