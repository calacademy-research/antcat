-title "Search History Items"
-breadcrumb :search_history_items

-content_for :javascripts do
  =javascript_include_tag "sortable_tables"

-content_for :breadcrumbs_right do
  -if current_user && !params[:standard]
    =link_to "Show 'Standard?' column", request.query_parameters.merge(standard: "y"), class: 'btn-normal'

  -# NOTE: Added as a dropdown because that was less confusing.
  .btn-normal.dropdown.button{data: { toggle: "more-dropdown"}, type: "button"} Other Search forms
  #more-dropdown.dropdown-pane{data: { dropdown: 'true', hover: 'true', hover_pane: 'true' }}
    %ul.no-bullet
      %li=link_to "Search Reference Sections form", reference_sections_path, class: 'btn-normal'

=form_with url: request.path, method: :get do |f|
  .row
    .small-6.medium-4.large-2.columns
      =f.select :search_type, options_for_select([["LIKE (default)", "LIKE"], ["REGEXP", "REGEXP"]], params[:search_type]), prompt: "Search type"
    .small-6.medium-4.large-4.columns
      =f.text_field :q, value: params[:q], placeholder: "Search query"
    .small-6.medium-4.large-4.columns.end
      =f.text_field :nq, value: params[:nq], placeholder: "Exclude search query"

  .row
    .small-6.medium-4.large-2.columns
      =f.select :taxon_type, options_for_select(Rank::TYPES, params[:taxon_type]), include_blank: "Taxon rank"
    .small-6.medium-4.large-2.columns
      =f.select :taxon_status, options_for_select(Status::STATUSES, params[:taxon_status]), include_blank: "Taxon status"
    .small-6.medium-4.large-2.columns
      =per_page_select HistoryItemsController::PER_PAGE_OPTIONS, params[:per_page]
    .small-6.medium-4.large-4.columns.end
      =f.select :type, options_for_history_item_types(params[:type]), include_blank: 'Any item type'
  .row.margin-bottom
    .small-6.medium-4.large-2.columns.end
      =button_tag "Search ".html_safe + search_icon, type: "submit", name: nil, class: "btn-normal"
      &nbsp;
      =link_to "Clear", request.path, class: "button btn-nodanger"

-if current_user && @history_items.present?
  .callout.no-border-callout.logged-in-only-background.small-text
    %h6 Counts (rank/status of terminal taxa + protonym name types)

    .row
      .medium-3.columns
        %pre=JSON.pretty_generate(Rank.sort_ranks_hash(@history_items.group('taxa.type').count))
      .medium-3.columns
        %pre=JSON.pretty_generate(@history_items.group('taxa.status').count)
      .medium-3.columns
        %pre=JSON.pretty_generate(@history_items.joins(protonym: :name).group('names.type').count)
      .medium-3.columns
        %pre=JSON.pretty_generate(@history_items.group(:type).count)

%table.tablesorter
  %caption
    =number_with_delimiter @history_items.count
    result(s)
  %thead
    %tr
      %th ID
      %th Pos.
      %th Item type
      %th Protonym / Terminal taxa
      %th Rank
      %th Status
      %th Taxt
      -if params[:standard]
        %th Standard?
  -if @history_items.empty?
    %tr
      %td{colspan: 3} Found no results.
  -@history_items.each do |history_item|
    %tr
      %td=link_to "##{history_item.id}", history_item_path(history_item)
      %td=history_item.position
      %td
        .small-text.logged-in-only-gray-bold-notice=history_item.underscored_type
      %td
        =CatalogFormatter.link_to_protonym(history_item.protonym)
        %br
        =CatalogFormatter.link_to_taxa(history_item.terminal_taxa)
      %td=history_item.terminal_taxa.map(&:rank).join(', ')
      %td=history_item.terminal_taxa.map(&:status).join(', ')
      %td=Detax[history_item.to_taxt]
      -# TODO: Secret option for investigating items.s
      -if params[:standard]
        %td
          -if history_item.standard_format?
            Yes
            =antcat_icon 'check'
          -else
            No
            =antcat_icon 'nope'

=will_paginate @history_items

.callout.margin-top
  =render "shared/note_on_taxt_references"
