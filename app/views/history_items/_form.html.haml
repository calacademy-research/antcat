-content_for :javascripts do
  =javascript_include_tag 'markdown_and_friends'

=render "shared/default_reference"

-content_for :breadcrumbs_right do
  %button.btn-neutral{"data-action" => "click->toggler#toggle", "data-toggler-target" => "taxt_textarea"} Show/hide taxt textarea

=form_with model: history_item, scope: :history_item, url: url, html: { "data-controller" => "history-item-form" } do |f|
  =render "shared/errors_for", resource: history_item
  =hidden_field_tag :redirect_back_url, params[:redirect_back_url]

  .mb-8{class: ("hidden" if collapse_history_item_taxt_textarea?(history_item)), data: { toggler_name: "taxt_textarea" }}
    =text_area_tag :taxt, history_item.taxt, rows: 5, name: 'history_item[taxt]', data: { has_linkables: true, previewable: true, previewable_title: "Taxt (freeform text) #{tooltip_icon('Required for taxt items; must it be blank for almost all other types of items. This textarea is always visible in order to make it easier to convert taxt item to relational items (or the other way around).')}", use_extras: true }, class: 'w-full'

  .mb-8
    .callout-white
      %h6
        Fields for relational history items
        =beta_label
        =tooltip_icon 'Still in beta. This section can be ignored for taxt items.'
      .row
        .medium-4
          %table
            %tr
              %td.whitespace-nowrap
                =f.label :type do
                  Item type
              %td=f.select :type, options_for_history_item_types(history_item.type), {}, "data-action" => "change->history-item-form#onSelectType", "data-history-item-form-target" => "typeSelect"

      %table.table-unstriped
        %tr
          %td{"data-history-item-form-target" => "typeSpecificHelpTaxt typeSpecificSection"}
            %p
              Fields in this box are not relevant for
              %code Taxt
              items.

          %td{"data-history-item-form-target" => "typeSpecificHelpJuniorSynonymOf typeSpecificHelpSeniorSynonymOf typeSpecificSection"}
            %p
              Protonym-based. Currently only for species-group names, because the terminal taxon of the
              %code object_protonym
              is used for the link (for which cannot pick the correct rank for protonyms with both genera and subgenera).
            %p
              Like with
              %code Taxt
              items, mirrored items
              =surround "(", ")" do
                %code JuniorSynonymOf
                +
                %code SeniorSynonymOf
              must be added.

          %td{"data-history-item-form-target" => "typeSpecificSection"}
            %p
              See also related wiki page
              =link_to_wiki_page_or_missing WikiPage::FORMS

          %td.hidden{"data-history-item-form-target" => "typeSpecificHelpHomonymReplacedBy typeSpecificHelpReplacementNameFor typeSpecificSection"}
            %p
              Like with
              %code Taxt
              items, mirrored items
              =surround "(", ")" do
                %code HomonymReplacedBy
                +
                %code ReplacementNameFor
              must be added.

      -# [grep:history_type].
      %table.table-unstriped
        %tbody
          %tr.hidden{"data-history-item-form-target" => "typeSpecificSubtype typeSpecificSection"}
            %th
              =f.label :subtype, id: 'type-label-subtype', "data-history-item-form-target" => "typeLabelSubtype" do
                subtype [???]
            %td.grow-tw-conflict
              =f.select :subtype, [history_item.subtype, '???'], {}, "data-history-item-form-target" => "subtypeSelect"
            %td
              %code subtype

          %tr.hidden{"data-history-item-form-target" => "typeSpecificPickedValue typeSpecificSection"}
            %th
              =f.label :picked_value, id: 'type-label-picked-value', "data-history-item-form-target" => "typeLabelPickedValue" do
                picked_value [???]
            %td.grow-tw-conflict=f.select :picked_value, [history_item.picked_value, '???'], {}, "data-history-item-form-target" => "pickedValueSelect"
            %td
              %code picked_value

          %tr.hidden{"data-history-item-form-target" => "typeSpecificTextValue typeSpecificSection"}
            %th.no-wrap
              =f.label :text_value, id: 'type-label-text-value', "data-history-item-form-target" => "typeLabelTextValue" do
                text_value [???]
            %td.grow-tw-conflict
              .max-w-xs=f.text_field :text_value
            %td
              %code text_value

          %tr.hidden{"data-history-item-form-target" => "typeSpecificObjectProtonym typeSpecificSection"}
            %th.no-wrap
              =f.label :object_protonym, id: 'type-label-object-protonym', "data-history-item-form-target" => "typeLabelObjectProtonym" do
                object_protonym_id [???]
            %td.grow-tw-conflict=protonym_picker f.object.object_protonym, name: 'history_item[object_protonym_id]', id: 'history_item_object_protonym_id'
            %td
              %code object_protonym

          %tr.hidden{"data-history-item-form-target" => "typeSpecificObjectTaxon typeSpecificSection"}
            %th.no-wrap
              =f.label :object_taxon, id: 'type-label-object-taxon', "data-history-item-form-target" => "typeLabelObjectTaxon" do
                object_taxon_id [???]
            %td.grow-tw-conflict=taxon_picker f.object.object_taxon, name: 'history_item[object_taxon_id]', id: 'history_item_object_taxon_id'
            %td
              %code object_taxon

          %tr.hidden{"data-history-item-form-target" => "typeSpecificReference typeSpecificSection"}
            %th.no-wrap
              =f.label :reference, id: 'type-label-reference', "data-history-item-form-target" => "typeLabelReference" do
                Reference
            %td.grow-tw-conflict=reference_picker f.object.reference, name: 'history_item[reference_id]', id: 'history_item_reference_id'
            %td
              %code reference_id

          %tr.hidden{"data-history-item-form-target" => "typeSpecificPages typeSpecificSection"}
            %th.no-wrap
              =f.label :pages, id: 'type-label-pages', "data-history-item-form-target" => "typeLabelPages" do
                Pages
            %td.grow-tw-conflict
              .max-w-xs=f.text_field :pages
            %td
              %code pages

          %tr.hidden{"data-history-item-form-target" => "typeSpecificForceAuthorCitation typeSpecificSection"}
            %th.no-wrap
              =f.label :pages, id: 'type-label-force-author-citation' do
                Force author citation
            %td.grow-tw-conflict
              =f.check_box :force_author_citation
            %td
              %code force_author_citation

  .row.mb-8
    .medium-3
      =edit_summary_text_field_tag
    .medium-6
      =f.button 'Save', class: "btn-saves btn-md"
    .medium-3
      =f.label :position do
        Position
        =tooltip_icon 'Leave blank to add new items last. Only relevant for items of Taxt type'
      =f.number_field :position, placeholder: ('Leave blank for default' if history_item.new_record?)
      .mb-4
      =f.select :rank, Rank::AntCatSpecific::TYPE_SPECIFIC_HISTORY_ITEM_TYPES, include_blank: 'Show for all ranks (default)'

.mb-20

%h5 Related records

-# TODO: DRY w.r.t. 'history_items/show.html.haml'.
-if protonym.taxa.present?
  .mb-8
    %h6.font-bold Taxa belonging to this history item's protonym
    %table.table-striped
      -TaxonQuery.new(protonym.taxa.order_by_name).with_common_includes_and_current_taxon_includes.each do |taxon|
        %tr
          %td=CatalogFormatter.link_to_taxon(taxon)
          %td=taxon.rank.capitalize
          %td
            =taxon.status.capitalize
            -unless taxon.status.in?(Taxa::ExpandedStatus::SELF_STATUSES)
              .text-sm=taxon.decorate.expanded_status

%h6.font-bold Other history items belonging to #{protonym.name.name_html}
%table.table-striped
  %tbody
    -if protonym.history_items.persisted.empty?
      %tr
        %td{colspan: 2} Protonym has no history items.
    -else
      -protonym.history_items.persisted.each do |protonym_history_item|
        %tr{class: ('!bg-logged-in-only' if protonym_history_item == history_item)}
          %td
            =link_to "##{protonym_history_item.id}", history_item_path(protonym_history_item)
            -if protonym_history_item == history_item
              %strong (selected)
          %td.grow-tw-conflict
            =Detax[protonym_history_item.to_taxt]
