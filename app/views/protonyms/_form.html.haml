-content_for :javascripts do
  =javascript_include_tag 'markdown_and_friends', 'taxt_editor'
  =javascript_include_tag 'check_name_conflicts', 'locality_autocompletion'

=render "shared/default_reference"

=form_with model: protonym_form do |f|
  =render 'shared/errors_for', resource: protonym_form

  .row
    .large-7.columns
      %table.unstriped
        =f.fields_for :name do |_name_fields|
          %tr
            %td
              =label_tag :name do
                Name
                =db_tooltip_icon :connecting_terms, scope: :protonyms
            %td
              -if protonym.name&.persisted?
                %span.float-right=link_to "Name record ##{protonym.name.id}", name_path(protonym.name), class: 'btn-normal btn-tiny'
                =protonym.decorate.name_with_fossil
              -else
                =text_field_tag :protonym_name_string, protonym&.name&.name
                #protonym_name_string-possible-conflicts-js-hook.possible-name-conflicts

        %tr
          %td
          %td
            =f.check_box :fossil
            =f.label :fossil

            =f.check_box :ichnotaxon
            =f.label :ichnotaxon

            =f.check_box :sic
            =f.label :sic do
              Sic
              =db_tooltip_icon :sic, scope: :protonyms

        =f.fields_for :authorship do |authorship_fields|
          %tr
            %td
              =authorship_fields.label :reference do
                Authorship
                =db_tooltip_icon :authorship, scope: :protonyms
            %td=reference_picker authorship_fields.object.reference, name: 'protonym[authorship_attributes][reference_id]', id: 'protonym_authorship_attributes_reference_id'
          %tr
            %td
              =authorship_fields.label :pages do
                Pages
                =db_tooltip_icon :pages, scope: :protonyms
            %td
              .small-max-width=authorship_fields.text_field :pages

        -# TODO: `protonym.(forms|bioregion|locality)?` to make it possible to blank them in case
        -# they are incorrectly filled in for new protonyms (fields are not hidden until we know the rank).
        -if protonym.species_group_name? || protonym.forms?
          %tr
            %td
              =f.label :forms do
                Forms
                =db_tooltip_icon :forms, scope: :protonyms
                =db_wiki_page_icon WikiPage::FORMS
            %td
              .small-max-width=f.text_field :forms

        -if protonym.species_group_name? || protonym.bioregion?
          %tr
            %td
              =f.label :bioregion do
                Bioregion
                =db_tooltip_icon :bioregion, scope: :protonyms
            %td
              .small-max-width
                =f.select :bioregion, Protonym::BIOREGIONS, include_blank: true

        -if protonym.species_group_name? || protonym.locality?
          %tr
            %td
              =f.label :locality do
                Locality
                =db_tooltip_icon :locality, scope: :protonyms
            %td
              =f.text_field :locality, data: { use_locality_autocomplete: true }

      %h6.font-bold.mt-8 Nomen attributes
      %ul.no-bullet
        %li
          =f.check_box :nomen_nudum
          =f.label :nomen_nudum do
            %i Nomen nudum

    .large-5.columns
      .callout.mb-8
        %table.unstriped
          %h6.font-bold
            Type name
            =db_tooltip_icon :type_name_reference, scope: :protonyms
          =f.fields_for :type_name, (protonym.type_name || TypeName.new) do |type_name_fields|
            %tr
              %td=type_name_fields.label :taxon
              %td=taxon_picker type_name_fields.object.taxon, name: 'protonym[type_name_attributes][taxon_id]', id: 'protonym_type_name_attributes_taxon_id'

            %tr
              %td
                =type_name_fields.label :fixation_method do
                  Fixation method
              %td=type_name_fields.select :fixation_method, TypeName::FIXATION_METHODS, include_blank: true

            %tr
              %td{colspan: 2}
                %br
                =label_tag :subsequent_designation_reference do
                  Subsequent designation reference
                  =db_tooltip_icon :type_name_reference, scope: :protonyms

            %tr
              %td=type_name_fields.label :reference
              %td=reference_picker type_name_fields.object.reference, name: 'protonym[type_name_attributes][reference_id]', id: 'protonym_type_name_attributes_reference_id'

            %tr
              %td=type_name_fields.label :pages
              %td
                .small-max-width=type_name_fields.text_field :pages

            -if type_name_fields.object.persisted?
              %tr
                %td
                  %br
                  =label_tag 'Clear type name?'
                %td
                  %br
                  =check_box_tag :destroy_type_name
                  -# TODO: Improve "(don't blank taxon)".
                  =label_tag :destroy_type_name, "Clear type name on save (don't blank taxon)"

    .large-12.columns.mb-8
      %hr

      %p
        See also related wiki page
        =link_to_wiki_page_or_missing WikiPage::TYPE_INFORMATION

      %table.unstriped
        -# TODO: `protonym.gender_agreement_type?` for same reason as for forms/bioregion/locality.
        -if protonym.species_group_name? || protonym.gender_agreement_type?
          %tr
            %td
              =f.label :gender_agreement_type do
                Gender agreement type (only for species-group names)
                =db_tooltip_icon :gender_agreement_type, scope: :protonyms
            %td
              .small-max-width
                =f.select :gender_agreement_type, Protonym::GENDER_AGREEMENT_TYPES, include_blank: '(blank)'

        %tr
          %td
            =f.label :etymology do
              Etymology
              =db_tooltip_icon :etymology, scope: :protonyms
          %td=render 'shared/taxt_editor/taxt_editor_template', name: 'protonym[etymology_taxt]', content: protonym.etymology_taxt

        %tr
          %td
            =f.label :primary_type_information do
              Primary type information
              =db_tooltip_icon :primary_type_information, scope: :protonyms
          %td=render 'shared/taxt_editor/taxt_editor_template', name: 'protonym[primary_type_information_taxt]', content: protonym.primary_type_information_taxt, format_type_fields: true
        %tr
          %td.shrink
            =f.label :secondary_type_information do
              Secondary type information
              =db_tooltip_icon :secondary_type_information, scope: :protonyms
          %td=render 'shared/taxt_editor/taxt_editor_template', name: 'protonym[secondary_type_information_taxt]', content: protonym.secondary_type_information_taxt, format_type_fields: true
        %tr
          %td
            =f.label :type_notes do
              Type notes
              =db_tooltip_icon :type_notes, scope: :protonyms
          %td=render 'shared/taxt_editor/taxt_editor_template', name: 'protonym[type_notes_taxt]', content: protonym.type_notes_taxt, format_type_fields: true
        %tr
          %td
            =f.label :notes do
              Notes
              =db_tooltip_icon :notes, scope: :protonyms
          %td=render 'shared/taxt_editor/taxt_editor_template', name: 'protonym[notes_taxt]', content: protonym.notes_taxt

  .row
    .large-6.columns
      %table.unstriped
        %tr
          %td
            =edit_summary_text_field_tag
            =f.button "Save", class: "btn-saves"

-if protonym.taxa.present?
  %h5.mt-20.mb-4 Related records

  %h6.font-bold Taxa belonging to this protonym
  %table
    -TaxonQuery.new(protonym.taxa.order_by_name).with_common_includes.each do |taxon|
      %tr
        %td=CatalogFormatter.link_to_taxon(taxon)
        %td=taxon.rank.capitalize
        %td
          =taxon.status.capitalize
          -unless taxon.status.in?(Taxa::ExpandedStatus::SELF_STATUSES)
            %br
            %small=taxon.decorate.expanded_status
        %td
          -if taxon.original_combination?
            Original combination
            =antcat_icon 'check'
