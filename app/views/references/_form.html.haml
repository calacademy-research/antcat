-content_for :javascripts do
  =javascript_include_tag 'jquery-ui/widgets/autocomplete'
  =javascript_include_tag 'controllers/references/form'

=form_with model: reference.becomes(Reference) do |f|
  =hidden_field_tag :ignore_duplicates, ('yes' if reference_form.ignore_duplicates?)
  =render 'shared/errors_for', resource: reference_form

  .row
    .medium-8.columns
      .row.mb-4
        .medium-12.columns
          =f.label :reference_author_names_string do
            Authors
            =db_tooltip_icon :authors, scope: :references
          =f.text_field :author_names_string, value: params.dig(:reference, :author_names_string) || reference.author_names_string

      .row.mb-4
        .medium-2.columns
          =f.label :year do
            Year
            =db_tooltip_icon :year, scope: :references
          =f.text_field :year
        .medium-2.columns
          =f.label :year_suffix do
            Year suffix
            =db_tooltip_icon :year_suffix, scope: :references
          =f.text_field :year_suffix, placeholder: 'Optional'
        .medium-4.columns.end
          =f.label :reference_pagination do
            Pagination
            =db_tooltip_icon :journal_pagination, scope: :references
            =db_tooltip_icon :book_pagination, scope: :references
            =db_tooltip_icon :nested_pagination, scope: :references
          =f.text_field :pagination

      .row.mb-4
        .medium-12.columns
          =f.label :reference_title do
            Title
            =db_tooltip_icon :title, scope: :references
          =f.text_area :title, rows: 1

      .row.mt-4
        .medium-12.columns
          #reference-type-css-tabs
            %input#article-tab.tab-input.hidden{checked: ("checked" if reference.is_a?(ArticleReference)), name: "reference_type", type: "radio", value: 'ArticleReference'}
            %label{for: "article-tab"} Article
            %input#book-tab.tab-input.hidden{checked: ("checked" if reference.is_a?(BookReference)), name: "reference_type", type: "radio", value: 'BookReference'}
            %label{for: "book-tab"} Book
            %input#nested-tab.tab-input.hidden{checked: ("checked" if reference.is_a?(NestedReference)), name: "reference_type", type: "radio", value: 'NestedReference'}
            %label{for: "nested-tab"} Nested

            #article-tab-content.tab
              .row
                .medium-6.columns
                  =f.label :reference_journal_name do
                    Journal
                    =db_tooltip_icon :journal_name, scope: :references
                  =f.text_field :journal_name, value: params.dig(:reference, :journal_name) || (reference.journal&.name if reference.respond_to?(:journal)) || ''
                .medium-6.columns.end
                  =f.label :reference_series_volume_issue do
                    Series volume issue
                    =db_tooltip_icon :series_volume_issue, scope: :references
                  =f.text_field :series_volume_issue

            #book-tab-content.tab
              .row
                .medium-6.columns.end
                  =f.label :reference_publisher_string do
                    Publisher
                    =db_tooltip_icon :publisher, scope: :references
                  =f.text_field :publisher_string, value: params.dig(:reference, :publisher_string) || (reference.publisher&.display_name if reference.respond_to?(:publisher)) || ''

            #nested-tab-content.tab
              .row
                .medium-6.columns.end
                  =f.label :nesting_reference_id do
                    Nesting reference ID
                    =db_tooltip_icon :nesting_reference_id, scope: :references
                  =f.text_field :nesting_reference_id

      .row.mt-8.mb-4
        .medium-12.columns
          %h6.font-bold Notes
        .medium-12.columns.mb-2
          =f.label :reference_public_notes, 'Public notes'
          =f.text_area :public_notes, rows: 2
        .medium-12.columns.mb-2
          =f.label :reference_editor_notes do
            Editor notes
            =db_tooltip_icon :editor_notes, scope: :references
          =f.text_area :editor_notes, rows: 2
        .medium-12.columns
          =f.label :reference_taxonomic_notes do
            Taxonomic notes
            =db_tooltip_icon :taxonomic_notes, scope: :references
          =f.text_area :taxonomic_notes, rows: 2

    .medium-4.columns
      .callout
        .row
          .medium-12.columns
            %h6.font-bold Misc. fields

          .medium-12.columns.mb-4
            =f.label :reference_bolton_key do
              Bolton key
              =db_tooltip_icon :bolton_key, scope: :references
            =f.text_field :bolton_key

          .medium-12.columns.mb-4
            =f.label :reference_doi do
              DOI
              =db_tooltip_icon :doi, scope: :references
            =f.text_field :doi

          .medium-6.columns
            =f.label :stated_year do
              Stated year
              =db_tooltip_icon :stated_year, scope: :references
            =f.text_field :stated_year
          .medium-6.columns.end.mb-2
            =f.label :author_names_suffix do
              Authors suffix
              =db_tooltip_icon :author_names_suffix, scope: :references
            =f.select :author_names_suffix, Reference.distinct.pluck(:author_names_suffix)

          .medium-8.columns.end.mb-4
            =f.label :reference_date do
              Date
              =db_tooltip_icon :date, scope: :references
            =f.text_field :date

          .medium-12.columns
            =f.label :online_early do
              =f.check_box :online_early
              Online early

    .medium-4.columns.end.mt-4
      .callout
        %h6.font-bold Reference document
        =f.fields_for :document, (reference.document || ReferenceDocument.new) do |document_form|
          .row.mb-4
            .medium-12.columns
              =document_form.file_field :file

          -if document_form.object.url?
            .row
              .medium-12.columns.end
                =f.label :document_url do
                  Source URL (legacy)
                =document_form.text_field :url

          .row.text-sm
            .medium-12.columns
              =succeed ":" do
                %code reference_documents.id
              =document_form.object.id || '(none)'
          .row.text-sm
            .medium-12.columns
              =succeed ":" do
                %code file_file_name
              -if document_form.object.file_file_name.present?
                =document_form.object.file_file_name
              -else
                (none)

  .row
    .medium-3.columns
      =edit_summary_text_field_tag

    .medium-3.columns.end
      %button.submit.btn-saves.btn-md Save
      -cancel_link = reference.new_record? ? references_path : reference_path(reference)
      =link_to "Cancel", cancel_link, class: "btn-neutral btn-md"
