-if user_is_at_least_helper?
  -content_for :javascripts do
    =javascript_include_tag 'markdown_and_friends', 'taxt_editor'
  =render "shared/default_reference"

.text-sm{data: { testid: 'catalog-nomen-synopsis' }}
  %span.text-lg.font-bold.mr-1=Taxa::LinkEachEpithet[taxon]
  =taxon.author_citation
  =taxon.decorate.expanded_status
  =taxon.name.gender

%div
  %span.font-bold.mr-1{data: { testid: 'catalog-protonym-name' }}
    =protonym.decorate.link_to_protonym
  -if protonym.sic?
    [sic]
  =succeed ':' do
    =CatalogFormatter.link_to_taxt_reference(taxon.authorship_reference)
  =protonym.decorate.format_pages_and_forms
  =Detax[protonym.notes_taxt]
  =add_period_if_necessary(protonym.decorate.format_locality)
  =add_period_if_necessary(protonym.bioregion)

  -if (protonym_type_name = protonym.type_name)
    -decorated_protonym_type_name = protonym_type_name.decorate
    =decorated_protonym_type_name.format_rank
    =CatalogFormatter.link_to_taxon(protonym_type_name.taxon) + decorated_protonym_type_name.compact_taxon_status + Detax[decorated_protonym_type_name.format_fixation_method]

-if current_user
  -if taxon.type_names.present?
    .bg-logged-in-only.callout.border-0.mt-8.mb-8
      %ul.no-bullet
        -taxon.type_names.each do |as_type_name|
          %li
            -decorated_as_type_name = as_type_name.decorate
            =decorated_as_type_name.format_just_rank
            of
            =as_type_name.protonym.decorate.link_to_protonym_with_author_citation + Detax[decorated_as_type_name.format_fixation_method]

.text-sm.mb-4
  -if protonym.primary_type_information_taxt?
    %strong Primary type information:
    =::Types::FormatTypeField[protonym.primary_type_information_taxt]

  -if protonym.secondary_type_information_taxt?
    %strong Secondary type information:
    =::Types::FormatTypeField[protonym.secondary_type_information_taxt]

  -if protonym.type_notes_taxt?
    %strong Type notes:
    =::Types::FormatTypeField[protonym.type_notes_taxt]

-if current_user && taxon.replacement_name_for.present?
  .bg-logged-in-only.callout.border-0
    %strong Replacement name for
    -taxon.replacement_name_for.each do |replaced_name|
      =CatalogFormatter.link_to_taxon(replaced_name)
      =replaced_name.author_citation
    =info_tooltip_icon "Via 'taxa.homonym_replaced_by_id'"

-# History items as object.
-if current_user
  -if taxon.history_items_as_object_for_taxon.present?
    -history_presenter = HistoryPresenter.new(taxon.history_items_as_object_for_taxon, :object)

    .bg-logged-in-only.callout.border-0.mt-8.mb-8
      %strong History items as object (mirrored items)
      %ul#history.mb-4
        -history_presenter.grouped_items.each do |grouped_item|
          %li
            =Detax[grouped_item.taxt(:object)]

-# Grouped history items.
-if taxon.history_items_for_taxon.present?
  -history_presenter = HistoryPresenter.new(taxon.history_items_for_taxon)

  -if current_user
    %h6.font-bold.mt-8
      Taxonomic history
      =info_tooltip_icon 'Automatically sorted and grouped items, logged-in version.'

    %table#history-table.table-striped.mb-16
      %tbody
        -history_presenter.grouped_items.each do |grouped_item|
          %tr
            %td
              -if grouped_item.grouped?
                %p=Detax[grouped_item.taxt]
                %p
                  -# TODO: Check `grouped_item.group_key.join('_')` because
                  -# `group_key` = `["JuniorSynonymOf", "object_protonym_id", 156572]`.
                  %button.btn-tiny.btn-nodanger{"data-action" => "toggler#toggle", "data-toggler-target" => "grouped-#{grouped_item.group_key.join('_')}"} Show/hide grouped

                  %span.ml-4
                  %small.logged-in-only-gray-bold-notice.mr-4 #{grouped_item.underscored_type} x #{grouped_item.number_of_items}

                  -if grouped_item.relational?
                    %span.show-on-hover=link_to "Add another", new_protonym_history_item_path(grouped_item.protonym, **grouped_item.params_for_add_another_of_same_type, **current_page_redirect_back_url), class: "btn-normal btn-very-tiny"

                %ul.compact-list.no-bullet.mb-8.hidden{data: { toggler_name: "grouped-#{grouped_item.group_key.join('_')}" }}
                  -grouped_item.items.each do |history_item|
                    %li.pl-8
                      =history_item.decorate.rank_specific_badge if history_item.rank?

                      -if user_is_at_least_helper?
                        =render 'history_items/catalog_taxt_editor_template', history_item: history_item
                      -else
                        =Detax[history_item.to_taxt]

              -else
                -history_item = grouped_item.items.first
                =history_item.decorate.rank_specific_badge if history_item.rank?

                -if user_is_at_least_helper?
                  =render 'history_items/catalog_taxt_editor_template', history_item: history_item
                -else
                  %p=Detax[history_item.to_taxt]

  -else
    %ul#history.mb-4
      -history_presenter.grouped_items.each do |grouped_item|
        %li
          =Detax[grouped_item.taxt]

-if current_user && !Status.display_history_items?(taxon.status)
  -if taxon.history_items_for_taxon_including_hidden.present?
    .bg-logged-in-only.callout.border-0.text-sm.mt-8.mb-8
      %h6.font-bold Protonym history items not shown on this page

      %p
        History items in this bluebox are shown on catalog pages for the protonym's terminal taxon:
        -taxon.protonym.terminal_taxa.each do |terminal_taxon|
          =CatalogFormatter.link_to_taxon(terminal_taxon)

      %ul#history.mb-4
        -taxon.history_items_for_taxon_including_hidden.each do |history_item|
          %li
            =history_item.decorate.rank_specific_badge if history_item.rank?

            -if user_is_at_least_helper?
              =render 'history_items/catalog_taxt_editor_template', history_item: history_item
            -else
              =Detax[history_item.to_taxt]

-if taxon.junior_synonyms.exists?
  -name_of_obsoletes = taxon.decorate.name_of_obsoletes
  %h6.font-bold.mt-8 Junior synonyms
  %ul.compact-list.no-bullet.mb-8
    -TaxonQuery.new(taxon.junior_synonyms.order_by_name).with_common_includes.each do |synonym|
      %li
        =CatalogFormatter.link_to_taxon(synonym)
        =synonym.author_citation
        -if synonym.obsolete_combinations.present?
          .pl-8
            Obsolete #{name_of_obsoletes}(s):
            =safe_join synonym.obsolete_combinations.map { |obsolete| CatalogFormatter.link_to_taxon(obsolete) }, ', '

-if taxon.obsolete_combinations.exists?
  %h6.font-bold.mt-8="Obsolete #{taxon.decorate.name_of_obsoletes}s"
  %ul.compact-list.no-bullet.mb-8
    -taxon.obsolete_combinations.order_by_name.includes(:name).each do |obsolete_combination|
      %li
        =CatalogFormatter.link_to_taxon(obsolete_combination)

.mb-4
  =render 'catalog/_show/child_lists', taxon: taxon
  -if taxon.is_a?(Genus)
    =render 'catalog/_show/rank_specific/genus', taxon: taxon
  -if taxon.is_a?(Species)
    =render 'catalog/_show/rank_specific/species', taxon: taxon
  -if taxon.is_a?(Subspecies)
    =render 'catalog/_show/rank_specific/subspecies', taxon: taxon

-if current_user && taxon.is_a?(Subgenus) && taxon.species.exists?
  =render 'catalog/_show/logged_in_only/species_in_subgenus', taxon: taxon

-if catalog_presenter.formicidae_landing_page?
  %br
  =link_to "Formicidae family references", catalog_path(taxon)
-else
  -if taxon.reference_sections.present?
    #reference-sections
      -taxon.reference_sections.each do |reference_section|
        .section.mb-4
          -if reference_section.title_taxt?
            %h6.font-bold=Detax[reference_section.title_taxt]

          -if reference_section.subtitle_taxt?
            %h6.font-bold=Detax[reference_section.subtitle_taxt]

          -if reference_section.references_taxt?
            %p=Detax[reference_section.references_taxt]

          -if current_user
            %span.show-on-hover
              =link_to "Show", reference_section, class: "btn-normal btn-very-tiny"
              -if user_is_at_least_helper?
                =link_to "Edit", edit_reference_section_path(reference_section), class: "btn-normal btn-very-tiny"
              =link_to "History", reference_section_history_path(reference_section), class: "btn-normal btn-very-tiny"

-unless catalog_presenter.formicidae_landing_page?
  %h6.font-bold.mt-20 Citations
  %ul#citations.compact-list
    -catalog_presenter.collected_references.each do |reference|
      -decorated_reference = reference.decorate
      %li
        =decorated_reference.expanded_reference
        =decorated_reference.format_document_links

        -if current_user
          .show-on-hover
            -if user_is_at_least_helper?
              =link_to "Edit", edit_reference_path(reference), class: "btn-tiny btn-normal"
            =copy_to_clipboard_button Taxt.ref(reference.id), "ref #{reference.id}"
            =copy_to_clipboard_button reference.id
