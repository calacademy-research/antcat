swagger: '2.0'

info:
  version: "1.7.2"
  title: AntCat REST API
  description: Read only API to access antcat.org
  contact:
    name: Brian Fisher
    email: bfisher@calacademy.org

host: antcat.org
basePath: /v1
schemes: [https]
consumes: [application/json]
produces: [application/json]

paths:
  /taxa/{id}:
    get:
      summary: Get a single taxon
      operationId: getTaxon
      tags:
        - taxa
      parameters:
        - name: id
          in: path
          description: taxon id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single taxon record
          schema:
            $ref: '#/definitions/Taxon'
        "404":
          description: Record not found

  /taxa/search/{string}:
    get:
      summary: Search taxa using advanced search string
      operationId: searchTaxa
      tags:
        - taxa
        - search
      parameters:
        - name: string
          in: path
          description: Advanced search string
          required: true
          type: string
      responses:
        "200":
          description: matching taxa records
          schema:
            type: array
            items:
              $ref: '#/definitions/Taxa'
        "404":
          description: Record not found

  /taxa:
    get:
      summary: Get taxa
      operationId: getTaxa
      tags:
        - taxa
      parameters:
        - name: starts_at
          in: query
          description: Lowest taxon ID to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Returns 100 taxa at a time starting at the specified taxon id. If no id is supplied, starts at zero
          schema:
            type: array
            items:
              $ref: '#/definitions/Taxon'
        "404":
          description: Record not found

  /protonyms:
    get:
      summary: Get all protonyms
      operationId: getProtonyms
      tags:
        - protonyms
      responses:
        "200":
          description: the first hundred citation records.
          schema:
            type: array
            items:
              $ref: '#/definitions/Protonym'
        "404":
          description: Record not found

  /protonyms/{id}:
    get:
      summary: Get a protonym
      operationId: getProtonym
      tags:
        - protonyms
      parameters:
        - name: id
          in: path
          description: protonym id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single protonym record
          schema:
            $ref: '#/definitions/Protonym'
        "404":
          description: Record not found

  /authors/{id}:
    get:
      summary: Get an author
      operationId: getAuthor
      tags:
        - authors
      parameters:
        - name: id
          in: path
          description: author id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single author record
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
        "404":
          description: Record not found

  /authors:
    get:
      summary: Get all authors
      operationId: getAuthors
      tags:
        - authors
      responses:
        "200":
          description: Array of Ids of all authors and their create/update dates
          schema:
            type: array
            items:
              $ref: '#/definitions/Author'
        "404":
          description: Record not found

  /author_names/{id}:
    get:
      summary: Get an author name by author id
      operationId: getAuthorName
      tags:
        - author_names
      parameters:
        - name: id
          in: path
          description: author id (not author NAME id!)
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single author name record
          schema:
            $ref: '#/definitions/AuthorName'
        "404":
          description: Record not found

  /author_names:
    get:
      summary: Get all author names
      operationId: getAuthorNames
      tags:
        - author_names
      responses:
        "200":
          description: Array of all author names
          schema:
            type: array
            items:
              $ref: '#/definitions/AuthorName'
        "404":
          description: Record not found

  /names/{id}:
    get:
      summary: Get an author name by author id
      operationId: getName
      tags:
        - names
      parameters:
        - name: id
          in: path
          description: name id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single taxon name record
          schema:
            $ref: '#/definitions/Name'
        "404":
          description: Record not found

  /names:
    get:
      summary: returns a maximum of 100 taxon names
      operationId: getNames
      tags:
        - names
      parameters:
        - name: starts_at
          in: query
          description: Lowest name ID to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Array of all author names
          schema:
            type: array
            items:
              $ref: '#/definitions/Name'
        "404":
          description: Record not found

  /citations:
    get:
      summary: Get all citations
      operationId: getCitations
      tags:
        - citations
      parameters:
        - name: starts_at
          in: query
          description: Lowest citation ID to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Returns 100 citations at a time starting at the specified citation id. If no id is supplied, starts at zero
          schema:
            type: array
            items:
              $ref: '#/definitions/Citation'
        "404":
          description: Record not found

  /citations/{id}:
    get:
      summary: Get a citation
      operationId: getCitation
      tags:
        - citations
      parameters:
        - name: id
          in: path
          description: citation id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single citation record
          schema:
            $ref: '#/definitions/Citation'
        "404":
          description: Record not found

  /history_items:
    get:
      summary: Get all history_items
      operationId: getHistoryItems
      tags:
        - history_items
      parameters:
        - name: starts_at
          in: query
          description: Lowest history_item id to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Returns 100 history items at a time starting at the specified history_item_id id. If no id is supplied, starts at zero
          schema:
            type: array
            items:
              $ref: '#/definitions/HistoryItem'
        "404":
          description: Record not found

  /history_items/{id}:
    get:
      summary: Get a single history_item
      operationId: getHistoryItem
      tags:
        - history_items
      parameters:
        - name: id
          in: path
          description: getHistoryItem id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single getHistoryItem  record
          schema:
            $ref: '#/definitions/HistoryItem'
        "404":
          description: Record not found

  /journals:
    get:
      summary: Get all journals
      operationId: getJournals
      tags:
        - journals
      parameters:
        - name: starts_at
          in: query
          description: Lowest journal id to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Returns 100 journals at a time starting the specified journal id. If no id is supplied, starts at zero
          schema:
            type: array
            items:
              $ref: '#/definitions/Journal'
        "404":
          description: Record not found

  /journals/{id}:
    get:
      summary: Get a single journal
      operationId: getJournal
      tags:
        - journals
      parameters:
        - name: id
          in: path
          description: getJournal id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single journal record
          schema:
            $ref: '#/definitions/Journal'
        "404":
          description: Record not found

  /publishers:
    get:
      summary: Get all publishers
      operationId: getPublishers
      tags:
        - publishers
      parameters:
        - name: starts_at
          in: query
          description: Lowest publisher id to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Returns 100 publishers at a time starting the specified publisher id. If no id is supplied, starts at zero
          schema:
            type: array
            items:
              $ref: '#/definitions/Publisher'
        "404":
          description: Record not found

  /publishers/{id}:
    get:
      summary: Get a single publisher
      operationId: getpublisher
      tags:
        - publishers
      parameters:
        - name: id
          in: path
          description: getpublisher id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single publisher record
          schema:
            $ref: '#/definitions/Publisher'
        "404":
          description: Record not found

  /references:
    get:
      summary: Get all references
      operationId: getReferences
      tags:
        - references
      parameters:
        - name: starts_at
          in: query
          description: Lowest reference id to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Returns 100 references at a time starting the specified reference id. If no id is supplied, starts at zero
          schema:
            type: array
            items:
              $ref: '#/definitions/Reference'
        "404":
          description: Record not found

  /references/{id}:
    get:
      summary: Get a single reference
      operationId: getreference
      tags:
        - references
      parameters:
        - name: id
          in: path
          description: getreference id
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single reference record
          schema:
            $ref: '#/definitions/Reference'
        "404":
          description: Record not found

  /reference_author_names:
    get:
      summary: Get all reference/Author Name association records
      operationId: getReferenceAuthorNames
      tags:
        - reference_author_names
      parameters:
        - name: starts_at
          in: query
          description: Lowest reference id to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Returns 100 referenceAuthorNames at a time starting the specified reference id. If no id is supplied, starts at zero
          schema:
            type: array
            items:
              $ref: '#/definitions/ReferenceAuthorName'
        "404":
          description: Record not found

  /reference_author_names/{id}:
    get:
      summary: Get a single reference/author name association
      operationId: getReferenceAuthorName
      tags:
        - reference_author_names
      parameters:
        - name: id
          in: path
          description: get referenceAuthor by ID
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single reference/author association record
          schema:
            $ref: '#/definitions/ReferenceAuthorName'
        "404":
          description: Record not found

  /reference_documents:
    get:
      summary: Get all reference/Author Name association records
      operationId: getReferenceDocuments
      tags:
        - reference_documents
      parameters:
        - name: starts_at
          in: query
          description: Lowest reference id to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Returns 100 referenceDocuments at a time starting the specified reference id. If no id is supplied, starts at zero
          schema:
            type: array
            items:
              $ref: '#/definitions/ReferenceDocument'
        "404":
          description: Record not found

  /reference_documents/{id}:
    get:
      summary: Get a single reference/author name association
      operationId: getReferenceDocument
      tags:
        - reference_documents
      parameters:
        - name: id
          in: path
          description: get referenceAuthor by ID
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single reference/author association record
          schema:
            $ref: '#/definitions/ReferenceDocument'
        "404":
          description: Record not found

  /reference_sections:
    get:
      summary: Get all reference/Author Name association records
      operationId: getReferenceSections
      tags:
        - reference_sections
      parameters:
        - name: starts_at
          in: query
          description: Lowest reference id to be returned
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: Returns 100 referenceSections at a time starting the specified reference id. If no id is supplied, starts at zero
          schema:
            type: array
            items:
              $ref: '#/definitions/ReferenceSection'
        "404":
          description: Record not found

  /reference_sections/{id}:
    get:
      summary: Get a single reference/author name association
      operationId: getReferenceSection
      tags:
        - reference_sections
      parameters:
        - name: id
          in: path
          description: get referenceAuthor by ID
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: a single reference/author association record
          schema:
            $ref: '#/definitions/ReferenceSection'
        "404":
          description: Record not found

definitions:
  Taxa:
    description: Abridged taxa records
    type: object
    properties:
      id:
        type: integer
        description: AntCat taxon id, primary key
      name:
        type: string
        description: de-normalized cache of the name object
  Taxon:
    description: Taxon level
    type: object
    properties:
      level:
        type: string
        description: Level of this particular taxon
        enum:
          - Family
          - Subfamily
          - Tribe
          - Subtribe
          - Genus
          - Subgenus
          - Species
          - Subspecies
          - Infrasubspecies
      body:
        type: object
        properties:
          id:
            type: integer
            description: AntCat taxon id, primary key
          created_at:
            type: string
            format: date-time
            description: Automatically generated timestamp for original creation
          updated_at:
            type: string
            format: date-time
            description: Automatically generated timestamp for most recent update
          status:
            type: string
            description: State (status of this record)
            enum:
              - valid
              - unidentifiable
              - excluded from Formicidae
              - homonym
              - unavailable
              - synonym
              - obsolete combination
              - unavailable misspelling
          protonym_id:
            type: integer
            description: Id of the protonym record
          family_id:
            type: integer
            description: Only populated if this is a subfamily with a valid family
          subfamily_id:
            type: integer
            description: Populated for most records
          tribe_id:
            type: integer
            description: Only populated if this is a genus with a valid tribe.
          subgenus_id:
            type: integer
            description: Only populated if this is a species with a valid subgenus
          name_id:
            type: integer
            description: Link to the name record
          homonym_replaced_by_id:
            type: integer
            description: Populated only if this is a homonym that has been superseded by another taxa.
          incertae_sedis_in:
            type: string
          name_cache:
            type: string
            description: de-normalized cache of the name object
          name_html_cache:
            type: string
            description: de-normalized cache of the name object in html format
          unresolved_homonym:
            type: boolean
          current_taxon_id:
            type: integer

  Author:
    description: Author primary key IDs
    type: object
    properties:
      id:
        type: integer
        description: AntCat author id, primary key
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  AuthorName:
    description: Author name record
    type: object
    properties:
      id:
        type: integer
        description: AntCat author name id, primary key
      author_id:
        type: integer
        description: FK to author
      name:
        type: string
        description: author name
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  Protonym:
    description: Protonym record
    type: object
    properties:
      id:
        type: integer
        description: Protonym id, primary key
      authorship_id:
        type: integer
        description: FK to author
      name_id:
        type: integer
        description: FK to name
      ichnotaxon:
        type: boolean
      fossil:
        type: boolean
      biogeographic_region:
        type: string
      locality:
        type: string
      forms:
        type: string
        description: String describing the forms; no standard format
      notes_taxt:
        type: string
        description: Long field with text and notes
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  Name:
    description: Taxon name
    type: object
    properties:
      id:
        type: integer
        description: Name id, primary key
      type:
        type: string
        description: Level of name
        enum:
          - SubtribeName
          - GenusName
          - SpeciesName
          - TribeName
          - SubfamilyName
          - SubgenusName
          - SubspeciesName
          - InfrasubspeciesName
          - SubtribeName
      name:
        type: string
        description: Plain text name
      epithet:
        type: string
        description: Plain text terminal epithet
      gender:
        type: string
        description: gender
        enum:
          - masculine
          - feninine
          - neuter
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  Citation:
    description: Citation
    type: object
    properties:
      id:
        type: integer
        description: Citation id, primary key
      reference_id:
        type: integer
        description: fk to reference
      pages:
        type: string
        description: String describing the page range; no standard format
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  HistoryItem:
    description: History item
    type: object
    properties:
      id:
        type: integer
        description: History item id, primary key
      protonym_id:
        type: integer
        description: fk to protonyms
      position:
        type: integer
        description: relative priority of this particular history item
      taxt:
        type: string
        description: Long field with text and notes. Contains references to taxaon and reference ids with format {ref *}:.
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  Journal:
    description: Journal
    type: object
    properties:
      id:
        type: integer
        description: Journal id, primary key
      name:
        type: string
        description: Journal name
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  Publisher:
    description: publisher
    type: object
    properties:
      id:
        type: integer
        description: publisher id, primary key
      name:
        type: string
        description: Publisher name
      place:
        type: string
        description: Publisher place
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  Reference:
    description: reference
    type: object
    properties:
      id:
        type: integer
        description: reference id, primary key
      year:
        type: integer
      date:
        type: string
      year_suffix:
        type: string
      stated_year:
        type: string
      type:
        type: string
      publisher_id:
        type: integer
        description: fk to publisher
      journal_id:
        type: integer
        description: fk to journal
      series_volume_issue:
        type: integer
      pagination:
        type: string
      author_names_string_cache:
        type: string
      editor_notes:
        type: string
      public_notes:
        type: string
      taxonomic_notes:
        type: string
      title:
        type: string
      nesting_reference_id:
        type: string
      author_names_suffix:
        type: string
      review_state:
        type: string
      doi:
        type: string
        description: DOI citation reference
      name:
        type: string
        description: Reference name
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  ReferenceAuthorName:
    description: reference author name - table to associate references with author names
    type: object
    properties:
      id:
        type: integer
        description: ReferenceAuthorName id, primary key
      author_name_id:
        type: integer
      reference_id:
        type: integer
      position:
        type: integer
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  ReferenceDocument:
    description: reference document
    type: object
    properties:
      id:
        type: integer
      reference_id:
        type: integer
      url:
        type: string
        description: reference document URL
      file_file_name:
        type: string
        description: Filename
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update

  ReferenceSection:
    description: reference section
    type: object
    properties:
      id:
        type: integer
      taxon_id:
        type: integer
      position:
        type: integer
        description: relative priority of this particular reference section
      references_taxt:
        type: string
        description: Long field with text and notes. Contains references to taxaon and reference ids with format {ref *}:.
      title_taxt:
        type: string
      subtitle_taxt:
        type: string
      created_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for original creation
      updated_at:
        type: string
        format: date-time
        description: Automatically generated timestamp for most recent update
