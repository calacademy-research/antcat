#!/bin/bash

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  echo "Usage: ./script/db_dump/$(basename $0)"
  echo
  echo "Requires the current user to have ssh access to EngineYard."
  exit 0
fi

set -euo pipefail

echo "*** Executing $0"

full_path=$(realpath "$0")
dir_path=$(dirname "$full_path")

db_dumps_path="$dir_path/../../data/db_dumps"

# SSH config.
# This script relies on the current user having ssh access to EngineYard.
# You may need edit these commands to include "ssh -i /path/to/your/id_rsa".
hostname="antcat.org"
username="deploy"
ssh_command="ssh -t -o StrictHostKeyChecking=no $username@$hostname"
scp_command="scp -o StrictHostKeyChecking=no $username@$hostname"

NOW=$(date +"%Y-%m-%dT%H-%M-%S")
REMOTE_DB_DUMP_FILENAME="antcat.${NOW}.sql"
REMOTE_DB_DUMP_PATH="/tmp/${REMOTE_DB_DUMP_FILENAME}"
REMOTE_DB_DUMP_GZIP_PATH="/tmp/${REMOTE_DB_DUMP_FILENAME}.gz"
LOCAL_DB_DUMP_GZIP_PATH="${db_dumps_path}/${REMOTE_DB_DUMP_FILENAME}.gz"

echo "Remote: Running mysqldump... [target file: ${REMOTE_DB_DUMP_PATH}]"
$ssh_command "mysqldump -u deploy antcat > ${REMOTE_DB_DUMP_PATH}"
echo

echo "Remote: Running gzip... [target file: ${REMOTE_DB_DUMP_GZIP_PATH}]"
$ssh_command "gzip ${REMOTE_DB_DUMP_PATH}"
echo

echo "Local: Downloading file from EngineYard... [target file: ${LOCAL_DB_DUMP_GZIP_PATH}]"
$scp_command:$REMOTE_DB_DUMP_GZIP_PATH "${LOCAL_DB_DUMP_GZIP_PATH}"
echo

echo "Done."

echo "To copy to other remote and import:"
echo
cat << EOF
DB_SERVER_THAT_WILL_BE_DROPPED="zzzzzzzzzzzzzz.us-west-2.compute.amazonaws.com" # Make sure it's not production!!!

# Copy from local to other remote.
scp "${LOCAL_DB_DUMP_GZIP_PATH}" deploy@\$DB_SERVER_THAT_WILL_BE_DROPPED:/tmp

# Run this on remote:
mysql -u root -e "DROP DATABASE antcat;"
mysql -u root -e "CREATE DATABASE antcat;"
zcat "${REMOTE_DB_DUMP_GZIP_PATH}" | mysql -u root antcat
EOF
