#!/bin/bash

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  echo "Usage: ./$(basename "$0")"
  echo
  echo "Requires the current user to have ssh access to EngineYard."
  exit 0
fi

set -euo pipefail

echo "*** Executing $0"

full_path=$(realpath "$0")
dir_path=$(dirname "$full_path")

db_dumps_path=$(realpath "$dir_path/../../data/db_dumps")

# SSH config.
# This script relies on the current user having ssh access to EngineYard.
# You may need edit these commands to include "ssh -i /path/to/your/id_rsa".
remote_host="antcat.org"
remote_user="deploy"
ssh_command="ssh -t -o StrictHostKeyChecking=no $remote_user@$remote_host"
scp_command="scp -o StrictHostKeyChecking=no $remote_user@$remote_host"

timestamp=$(date +"%Y-%m-%dT%H-%M-%S")
remote_db_dump_filename="antcat.${timestamp}.sql"
remote_db_dump_path="/tmp/${remote_db_dump_filename}"
remote_db_dump_gzip_path="/tmp/${remote_db_dump_filename}.gz"
local_db_dump_gzip_path="${db_dumps_path}/${remote_db_dump_filename}.gz"

echo "Remote: Running mysqldump... [target file: ${remote_db_dump_path}]"
$ssh_command "mysqldump -u deploy antcat > ${remote_db_dump_path}"
echo

echo "Remote: Running gzip... [target file: ${remote_db_dump_gzip_path}]"
$ssh_command "gzip ${remote_db_dump_path}"
echo

echo "Local: Downloading file from EngineYard... [target file: ${local_db_dump_gzip_path}]"
$scp_command:$remote_db_dump_gzip_path "${local_db_dump_gzip_path}"
echo

echo "Done."

echo "To copy to other remote and import:"
echo
cat << EOF
DB_SERVER_THAT_WILL_BE_DROPPED="zzzzzzzzzzzzzz.us-west-2.compute.amazonaws.com" # Make sure it's not production!!!

# Copy from local to other remote.
scp "${local_db_dump_gzip_path}" deploy@\$DB_SERVER_THAT_WILL_BE_DROPPED:/tmp

# Run this on remote:
mysql -u root -e "DROP DATABASE antcat;"
mysql -u root -e "CREATE DATABASE antcat;"
zcat "${remote_db_dump_gzip_path}" | mysql -u root antcat
EOF
