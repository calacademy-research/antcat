#!/bin/bash

# See also deploy/before_bundle.rb

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  echo "Usage: ./$(basename "$0") <action:show|backup|upload> <target_env:production|staging>"
  echo "Examples:"
  echo "       ./$(basename "$0") show staging"
  echo "       ./$(basename "$0") backup staging"
  echo "       ./$(basename "$0") upload staging"
  echo
  echo "For managing secret setting files on EngineYard."
  echo
  echo "Requires the current user to have ssh access to EngineYard."
  exit 0
fi

set -euo pipefail

echo "*** Executing $0"

full_path=$(realpath "$0")
dir_path=$(dirname "$full_path")

action=${1?param missing - action}
target_env=${2?param missing - target_env}

# ---

if [ "${target_env:-}" = "production" ]; then
  remote_host="antcat.org"
elif [ "${target_env:-}" = "staging" ]; then
  remote_host="${ANTCAT_STAGING_HOST:-}"
  [ -z "${remote_host}" ] && echo "staging host not set" && exit 1
else
  echo "not a valid target_env"
  exit 1
fi

remote_user="deploy"
remote_settings_dir="/data/antcat/shared/config/settings"
remote_secret_file="${remote_settings_dir}/$target_env.secret.yml"
local_settings_dir=$(realpath "$dir_path/../config/settings")
local_secret_file="${local_settings_dir}/$target_env.secret.yml"

echo
echo "action: ${action}"
echo "target_env: ${target_env}"
echo "remote_host: ${remote_host}"
echo
echo "remote_secret_file: ${remote_secret_file}"
echo "local_secret_file: ${local_secret_file}"
echo
echo "----------"
echo

# ---

# To manually run the same command (production):
#   ssh deploy@antcat.org cat /data/antcat/shared/config/settings/production.secret.yml
function show_remote_secret_file() {
  ssh $remote_user@$remote_host cat $remote_secret_file
}

# To manually run the same command (production):
#   scp deploy@antcat.org:/data/antcat/shared/config/settings/production.secret.yml \
#    "<repo path>/config/settings/production.secret.yml.backup_$(date +"%Y_%m_%d__%H%M%S")"
function backup_remote_secret_file_to_local() {
  timestamp=$(date +"%Y_%m_%d__%H%M%S")
  local_backup_file="${local_secret_file}.backup_${timestamp}"

  echo "Creating local_backup_file: $local_backup_file"
  scp $remote_user@$remote_host:$remote_secret_file "${local_backup_file}"
  echo "Backup done."
}

# To manually run the same command (production):
#   scp config/settings/production.secret.yml deploy@antcat.org:/data/antcat/shared/config/settings/production.secret.yml
function upload_local_secret_file_to_remote() {
  if [ ! -f "${local_secret_file}" ]; then
    echo "local_secret_file not found!"
    exit 1
  fi

  echo "WARNING: This will overwrite the remote secret file with the local secret file"
  read -r -p "Are you sure? [y/N] " response
  if [ "$response" = "y" ]; then
    if [ "${AC_SECRETS_SKIP_BACKUP:-}" != "y" ]; then
      backup_remote_secret_file_to_local
    fi

    echo "Uploading local_secret_file: $local_secret_file"
    scp $local_secret_file $remote_user@$remote_host:$remote_secret_file
    echo "Upload done."
    echo "Deploy to make changes take effect, see https://github.com/calacademy-research/antcat-issues/wiki/Deploying-on-Engine-Yard"
  else
    echo "Exiting."
    exit 1
  fi
}

# ---

if [ "${action:-}" = "show" ]; then
  show_remote_secret_file
elif [ "${action:-}" = "backup" ]; then
  backup_remote_secret_file_to_local
elif [ "${action:-}" = "upload" ]; then
  upload_local_secret_file_to_remote
else
  echo "not a valid action"
  exit 1
fi
